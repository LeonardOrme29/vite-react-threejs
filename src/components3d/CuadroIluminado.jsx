/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.12 public/models/cuadroIluminado.glb
*/
import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF,Text } from '@react-three/drei'
import { useSelector } from 'react-redux';

export function CuadroIluminado(props) {
  const { nodes, materials } = useGLTF('models/cuadroIluminado.glb')
  const colorFrame=useSelector(state=>state.colorFrame)
  const frame=useSelector(state=>state.buildFrame)
  const sumaX=1.6;
  var profundidad=0;
  // var material=new THREE.MeshBasicMaterial({color:colorFrame.frame.materials[0]})
  var material=new THREE.MeshBasicMaterial({color:colorFrame.materials})
  nodes.liston004.material.color.r=material.color.r;
  nodes.liston004.material.color.g=material.color.g;
  nodes.liston004.material.color.b=material.color.b;
  //Material del vidrio
  const vidrio=new THREE.MeshPhysicalMaterial({
    roughness:0,
    metalness:0,
    transmission:1,
    ior:2.33
  })
  materials.vidrio=vidrio;
  const zoomFactor = 2.6;
  return (
    <group {...props} dispose={null} scale={[zoomFactor, zoomFactor, zoomFactor]}>
      <pointLight intensity={1} decay={2} position={[-1.62, 0.05, 3.06]} rotation={[-Math.PI / 2, 0, 0]} />
      <pointLight intensity={0.7} decay={2} position={[3, -5, 3.06]} rotation={[-Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes.liston001.geometry} material={nodes.liston004.material} position={[-2.33+sumaX, 0.12, 0.13]} rotation={[1.57, 0, Math.PI]} scale={[0.1, 0.1+profundidad, 0.8]} />
      <mesh geometry={nodes.liston004.geometry} material={nodes.liston004.material} position={[-1.63+sumaX, 0.82, 0.13]} rotation={[-1.57, -1.57, 0]} scale={[0.1, 0.1+profundidad, 0.8]} />
      <mesh geometry={nodes.liston002.geometry} material={nodes.liston004.material} position={[-0.93+sumaX, 0.12, 0.13]} rotation={[-1.57, 0, 0]} scale={[0.1, 0.1+profundidad, 0.8]} />
      <mesh geometry={nodes.liston003.geometry} material={nodes.liston004.material} position={[-1.63+sumaX, -0.58, 0.13]} rotation={[-1.57, 1.57, 0]} scale={[0.1, 0.1+profundidad, 0.8]} />
      <mesh geometry={nodes.vidrio.geometry} material={materials.vidrio} position={[-1.63+sumaX, 0.12, 0.11]} rotation={[-1.57, 0, 0]} scale={[0.7, 0.01, 0.7]} />
      <mesh geometry={nodes.tapa.geometry} material={materials['tapa.001']} position={[-1.63+sumaX, 0.12, 0.04]} rotation={[-1.57, 0, 0]} scale={[0.7, 0.01, 0.7]} />
      <group>
        <Text
          fontSize={0.1} // Tamaño de fuente
          font="" // Ruta de la fuente
          color="black" // Color del texto
          position={[1, 0.1, 0.13]} // Posición del texto en el espacio 3D
          rotation={[0, 0, 0]} // Rotación del texto
        >
          Alto:
        </Text>
        <Text
          fontSize={0.1} // Tamaño de fuente
          font="" // Ruta de la fuente
          color="black" // Color del texto
          position={[1.1, 0, 0.13]} // Posición del texto en el espacio 3D
          rotation={[0, 0, 0]} // Rotación del texto
        >{frame.frame.alturaC} cm</Text>
      </group>
      <Text
        fontSize={0.1} // Tamaño de fuente
        font="" // Ruta de la fuente
        color="black" // Color del texto
        position={[0, -0.85, 0.13]} // Posición del texto en el espacio 3D
        rotation={[0, 0, 0]} // Rotación del texto
      >
        Ancho: {frame.frame.anchoC} cm
      </Text>
    </group>
  )
}

useGLTF.preload('models/cuadroIluminado.glb')
