/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.12 public/models/cuadroVidrio.glb
*/
import * as THREE from 'three'
import { MeshBasicMaterial, DoubleSide, TextureLoader, RepeatWrapping } from 'three';
import React, { useRef } from 'react'
import { useGLTF, Text } from '@react-three/drei'
import { useSelector } from 'react-redux';


export function CuadroVidrio(props) {
  const { nodes, materials } = useGLTF('models/cuadroVidrio.glb')
  const sumaX=1.6;
  const vidrio=new THREE.MeshPhysicalMaterial({
    roughness:0,
    metalness:0,
    transmission:1,
    ior:2.33
  })
  materials.vidrio=vidrio;
  //COLOR
  const colorFrame=useSelector(state=>state.colorFrame)
  var material=new THREE.MeshBasicMaterial({color:colorFrame.materials})
  nodes.liston008.material.color.r=material.color.r;
  nodes.liston008.material.color.g=material.color.g;
  nodes.liston008.material.color.b=material.color.b;
  //color del arte
  var materialArte=new THREE.MeshBasicMaterial({color:0x19C37D})
  //TEXTO DEL TAMAÑO DEL CUADRO
  const frame=useSelector(state=>state.buildFrame)

  const zoomFactor = 2.25;
  return (
    <group {...props} dispose={null} scale={[zoomFactor, zoomFactor, zoomFactor]}>
      <pointLight intensity={1} decay={2} position={[-1.62, 0.05, 3.06]} rotation={[-Math.PI / 2, 0, 0]} />
      <pointLight intensity={0.7} decay={2} position={[3, -5, 3.06]} rotation={[-Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes.vidrio.geometry} material={materials.vidrio} position={[-1.64+sumaX, 0.12, 0.21]} rotation={[-1.57, 0, 0]} scale={[0.8, 0.01, 0.8]} />
      <mesh geometry={nodes.liston006.geometry} material={nodes.liston008.material} position={[-1.54+sumaX, 0.92, 0.22]} rotation={[-1.57, -1.57, 0]} scale={[0.1, 0.1, 0.8]} />
      <mesh geometry={nodes.liston007.geometry} material={nodes.liston008.material} position={[-0.84+sumaX, 0.22, 0.22]} rotation={[-Math.PI / 2, 0, 0]} scale={[0.1, 0.1, 0.8]} />
      <mesh geometry={nodes.liston005.geometry} material={nodes.liston008.material} position={[-1.74+sumaX, -0.68, 0.22]} rotation={[-Math.PI / 2, Math.PI / 2, 0]} scale={[0.1, 0.1, 0.8]} />
      <mesh geometry={nodes.liston008.geometry} material={nodes.liston008.material} position={[-2.44+sumaX, 0.02, 0.22]} rotation={[1.57, 0, -3.14]} scale={[0.1, 0.1, 0.8]} />
      <mesh geometry={nodes.imagen.geometry} material={materialArte} position={[-1.64 + sumaX, 0.12, 0.18]} rotation={[-1.57, 0, 0]} scale={[0.5, 0.01, 0.5]} />
      <mesh geometry={nodes.Cube.geometry} material={nodes.Cube.material} position={[-0.89+sumaX, 0.12, 0.08]} scale={[0.05, 0.8, 0.05]} />
      <mesh geometry={nodes.Cube001.geometry} material={nodes.Cube001.material} position={[-2.39+sumaX, 0.12, 0.08]} scale={[0.05, 0.8, 0.05]} />
      <mesh geometry={nodes.Cube002.geometry} material={nodes.Cube002.material} position={[-1.63+sumaX, -0.63, 0.08]} rotation={[0, 0, -Math.PI / 2]} scale={[0.05, 0.8, 0.05]} />
      <mesh geometry={nodes.Cube003.geometry} material={nodes.Cube003.material} position={[-1.63+sumaX, 0.87, 0.08]} rotation={[0, 0, -Math.PI / 2]} scale={[0.05, 0.8, 0.05]} />
      <mesh geometry={nodes.vidrioAtras.geometry} material={materials.vidrio} position={[-1.64+sumaX, 0.12, 0.15]} rotation={[-1.57, 0, 0]} scale={[0.8, 0.01, 0.8]} />
      <group>
        <Text
          fontSize={0.1} // Tamaño de fuente
          font="" // Ruta de la fuente
          color="black" // Color del texto
          position={[1.1, 0.1, 0.13]} // Posición del texto en el espacio 3D
          rotation={[0, 0, 0]} // Rotación del texto
        >
          Alto:
        </Text>
        <Text
          fontSize={0.1} // Tamaño de fuente
          font="" // Ruta de la fuente
          color="black" // Color del texto
          position={[1.2, 0, 0.13]} // Posición del texto en el espacio 3D
          rotation={[0, 0, 0]} // Rotación del texto
        >{frame.frame.alturaC} cm</Text>
      </group>
        <Text
          fontSize={0.1} // Tamaño de fuente
          font="" // Ruta de la fuente
          color="black" // Color del texto
          position={[0, -1, 0.13]} // Posición del texto en el espacio 3D
          rotation={[0, 0, 0]} // Rotación del texto
        >
          Ancho: {frame.frame.anchoC} cm
        </Text>
    </group>
  )
}

useGLTF.preload('models/cuadroVidrio.glb')
